{"version":3,"sources":["Layout/Header.js","Layout/index.js","Layout/NotFound.js","utils/api/index.js","Layout/NewDeck.js","Deck/Deck.js","Deck/Decks.js","cards/CardList.js","cards/FilterCardList.js","Deck/DeckList.js","cards/Card.js","Layout/View.js","cards/Form.js","cards/AddCards.js","Deck/EditDeck.js","cards/EditCard.js","Study/Study.js","App.js","index.js"],"names":["Header","className","Layout","exact","path","to","NotFound","API_BASE_URL","process","headers","Headers","stripCards","deck","cards","fetchJson","url","options","onCancel","a","fetch","response","status","Error","statusText","json","name","console","error","stack","Promise","resolve","signal","method","body","JSON","stringify","readDeck","deckId","updatedDeck","id","deleteDeck","card","Number","cardId","updatedCard","append","NewDeck","history","useHistory","useState","setName","desc","setDesc","onSubmit","event","preventDefault","createDeck","then","push","htmlFor","type","onChange","target","value","Deck","decks","map","item","length","description","onClick","window","confirm","location","reload","Decks","setDecks","useEffect","listDecks","deckList","CardList","cardList","useRouteMatch","front","back","FilterCardList","setDeck","setCardList","useParams","result","DeckList","Card","View","Form","handleSubmit","handleFront","handleBack","AddCards","setFront","setBack","createCard","EditDeck","log","updateDeck","goBack","EditCard","setCard","readCard","updateCard","Study","setDescription","index","setIndex","side","setSide","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAaeA,MAXf,WACE,OACE,wBAAQC,UAAU,oBAAlB,SACE,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,YAAd,+BACA,mBAAGA,UAAU,OAAb,sD,OCmBOC,MAtBf,WACE,OACE,8BAEI,qBAAKD,UAAU,YAAf,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,iCAAlB,UACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAMC,GAAG,2CAAT,SAAoD,wBAAQJ,UAAU,0BAAlB,2BAEtD,cAAC,IAAD,CAAOG,KAAK,iCAAZ,SACE,cAAC,EAAD,cCHCE,MATf,WACE,OACE,sBAAKL,UAAU,WAAf,UACE,2CACA,cAAC,IAAD,CAAMI,GAAG,iCAAT,gC,mDCHAE,EAAeC,iKAAYD,cAAgB,wBAK3CE,EAAU,IAAIC,QAapB,SAASC,EAAWC,GACqBA,EAA/BC,MACR,OADA,YAAuCD,EAAvC,G,SAoBaE,E,kFAAf,WAAyBC,EAAKC,EAASC,GAAvC,eAAAC,EAAA,+EAE2BC,MAAMJ,EAAKC,GAFtC,aAEUI,EAFV,QAIiBC,OAAS,KAAOD,EAASC,OAAS,KAJnD,sBAKY,IAAIC,MAAJ,UAAaF,EAASC,OAAtB,cAAkCD,EAASG,aALvD,UAQ4B,MAApBH,EAASC,OARjB,yCASa,MATb,wBAYiBD,EAASI,OAZ1B,8EAeuB,eAAf,KAAMC,KAfd,uBAgBMC,QAAQC,MAAM,KAAMC,OAhB1B,sCAmBWC,QAAQC,QAAQb,IAnB3B,2D,kEA4BO,WAAyBc,GAAzB,eAAAb,EAAA,6DACCH,EADD,UACUR,EADV,8DAEQO,EAAUC,EAAK,CAAEgB,UAAU,IAFnC,oF,kEAeA,WAA0BnB,EAAMmB,GAAhC,iBAAAb,EAAA,6DACCH,EADD,UACUR,EADV,wCAECS,EAAU,CACdgB,OAAQ,OACRvB,UACAwB,KAAMC,KAAKC,UAAUxB,EAAWC,IAChCmB,UANG,SAQQjB,EAAUC,EAAKC,EAAS,IARhC,oF,sBAoBA,SAAeoB,EAAtB,oC,4CAAO,WAAwBC,EAAQN,GAAhC,eAAAb,EAAA,6DACCH,EADD,UACUR,EADV,gDAC8D8B,EAD9D,0BAEQvB,EAAUC,EAAK,CAAEgB,UAAU,IAFnC,oF,kEAcA,WAA0BO,EAAaP,GAAvC,iBAAAb,EAAA,6DACCH,EADD,UACUR,EADV,gDAC8D+B,EAAYC,GAD1E,iBAECvB,EAAU,CACdgB,OAAQ,MACRvB,UACAwB,KAAMC,KAAKC,UAAUxB,EAAW2B,IAChCP,UANG,SAQQjB,EAAUC,EAAKC,EAASsB,GARhC,oF,sBAoBA,SAAeE,EAAtB,oC,4CAAO,WAA0BH,EAAQN,GAAlC,iBAAAb,EAAA,6DACCH,EADD,UACUR,EADV,gDAC8D8B,GAC7DrB,EAAU,CAAEgB,OAAQ,SAAUD,UAF/B,SAGQjB,EAAUC,EAAKC,GAHvB,oF,kEAgCA,WAA0BqB,EAAQI,EAAMV,GAAxC,iBAAAb,EAAA,6DAGCH,EAHD,UAGUR,EAHV,wCAILkC,EAAKJ,OAASK,OAAOL,GACfrB,EAAU,CACdgB,OAAQ,OACRvB,UACAwB,KAAMC,KAAKC,UAAUM,GACrBV,UATG,SAWQjB,EAAUC,EAAKC,EAASyB,GAXhC,oF,kEAuBA,WAAwBE,EAAQZ,GAAhC,eAAAb,EAAA,6DACCH,EADD,UACUR,EADV,gDAC8DoC,GAD9D,SAEQ7B,EAAUC,EAAK,CAAEgB,UAAU,IAFnC,oF,kEAcA,WAA0Ba,EAAab,GAAvC,iBAAAb,EAAA,6DACCH,EADD,UACUR,EADV,gDAC8DqC,EAAYL,IACzEvB,EAAU,CACdgB,OAAQ,MACRvB,UACAwB,KAAMC,KAAKC,UAAUS,IALlB,SAOQ9B,EAAUC,EAAKC,EAAS4B,GAPhC,oF,sBAvMPnC,EAAQoC,OAAO,eAAgB,oBCmChBC,MAxCf,WACE,IAAMC,EAAUC,cAChB,EAAwBC,mBAAS,IAAjC,mBAAOxB,EAAP,KAAayB,EAAb,KACA,EAAwBD,mBAAS,IAAjC,mBAAOE,EAAP,KAAaC,EAAb,KAUA,OAAO,gCACL,cAAC,EAAD,IACA,gCAAK,cAAC,IAAD,CAAM/C,GAAG,iCAAT,kBAAL,MAA6D,+CAC7D,uBAAMgD,SAVa,SAAAC,GACnBA,EAAMC,iBD0EH,SAAP,oCCvEIC,CADa,CAAC,KAAQ/B,EAAM,YAAe0B,IAE1CM,KAAKV,EAAQW,KAAK,oCAKnB,UACA,sBAAKzD,UAAU,yBAAf,UACgB,uBAAO0D,QAAQ,OAAf,SACA,uBAAO1D,UAAU,cACjB2D,KAAK,OACLrB,GAAG,OACHd,KAAK,OACLoC,SAnBC,SAACP,GAAD,OAAWJ,EAAQI,EAAMQ,OAAOC,QAoBjCA,MAAOtC,MAGP,uBAAOkC,QAAQ,SACf,0BAAU1D,UAAU,cACpBsC,GAAG,OACHd,KAAK,OACLoC,SA1BC,SAACP,GAAD,OAAWF,EAAQE,EAAMQ,OAAOC,QA2BjCA,MAAOZ,OAEX,wBAAQS,KAAK,SAAb,oBACA,cAAC,IAAD,CAAMvD,GAAG,iCAAT,SAA0C,wBAAQuD,KAAK,SAAb,6BCR3CI,MA3Bf,YAEQ,OAFe,EAARC,MAEMC,KAAI,SAACC,GACd,OAAO,6BACH,sBAAKlE,UAAU,iBAAf,UACA,sBAAKA,UAAU,oDAAf,UACA,6BAAKkE,EAAK1C,OACV,8BAAI0C,EAAKtD,MAAMuD,OAAf,eAGC,4BAAID,EAAKE,cACT,sBAAK5C,KAAK,UAAUxB,UAAU,aAA9B,UACG,cAAC,IAAD,CAAMI,GAAE,+CAA0C8D,EAAK5B,IAAvD,SAA6D,4CAC7D,cAAC,IAAD,CAAMlC,GAAE,+CAA0C8D,EAAK5B,GAA/C,UAAR,SAAmE,6CACnE,wBAAQ+B,QAAS,WACTC,OAAOC,QAAQ,+CACfhC,EAAW2B,EAAK5B,IACfkB,KAAKc,OAAOE,SAASC,WAH9B,2BAXQP,EAAK5B,QCelBoC,MAlBd,WACG,MAA0B1B,mBAAS,IAAnC,mBAAOgB,EAAP,KAAcW,EAAd,KASA,OANAC,qBAAU,YH8DP,SAAP,mCG7DQC,GACCrB,KAAKmB,KACL,IAID,qBAAK3E,UAAU,gCAAf,SACI,6BACI,cAAC,EAAD,CAAMgE,MAAOA,EAAOc,SAXf,UCSNC,MAdf,YAA+B,IAAZC,EAAW,EAAXA,SACRlE,EAAOmE,cAAPnE,IACP,OAAOkE,EAASf,KAAI,SAACC,GACjB,OAAQ,qBAAIlE,UAAU,SAAd,UACJ,sBAAKA,UAAU,UAAf,UACI,mBAAGA,UAAU,MAAb,SAAoBkE,EAAKgB,QACzB,mBAAGlF,UAAU,MAAb,SAAoBkE,EAAKiB,UAE7B,eAAC,IAAD,CAAM/E,GAAE,UAAKU,EAAL,kBAAkBoD,EAAK5B,GAAvB,SAAR,cAA2C,0CAA3C,OACA,8CANgC4B,EAAK5B,QC4BlC8C,MA3Bf,WACI,MAAwBpC,mBAAS,IAAjC,mBAAOrC,EAAP,KAAa0E,EAAb,KACA,EAAgCrC,mBAAS,IAAzC,mBAAOgC,EAAP,KAAiBM,EAAjB,KACOlD,EAAUmD,cAAVnD,OAeP,OAbAwC,qBAAU,WACN,IAAKzC,EAASC,GACToB,MAAK,SAACgC,GAAD,OAAYH,EAAQG,MAE5B,MAAO9D,GAAQ,GAAc,eAAVA,EAAwB,MAAMA,KAClD,CAACU,IACJwC,qBAAU,WACR,IAAKzC,EAASC,GACToB,MAAK,SAACgC,GAAD,OAAYF,EAAYE,EAAO5E,UAEvC,MAAOc,GAAQ,GAAc,eAAVA,EAAwB,MAAMA,KAClD,CAACU,IAGF,gCACI,gCAAK,cAAC,IAAD,CAAMhC,GAAG,IAAT,kBAAL,MAAgC,4BAAIO,EAAKa,OAAzC,OACA,6BAAI,cAAC,EAAD,CAAUwD,SAAUA,UCTrBS,MAdd,YAA6B,IAAVrD,EAAS,EAATA,OAChB,EAAwBY,mBAAS,IAAjC,mBAAOrC,EAAP,KAAa0E,EAAb,KAME,OALFT,qBAAU,WACPzC,EAASC,GACRoB,KAAK6B,KACJ,CAACjD,IAEG,gCACL,6BAAKzB,EAAKa,OACV,4BAAIb,EAAKyD,kBCqBFsB,MA5Bf,YAAyB,IAAVtD,EAAS,EAATA,OACJtB,EAAOmE,cAAPnE,IACDgC,EAAUC,cAGd,OACE,sBAAK/C,UAAU,4CAAf,UACA,cAAC,EAAD,CAAUoC,OAAQA,IAElB,sBAAKpC,UAAU,yBAAf,UACA,eAAC,IAAD,CAAMI,GAAE,UAAKU,EAAL,SAAR,cAA0B,0CAA1B,OACA,2CACA,eAAC,IAAD,CAAMV,GAAE,UAAKU,EAAL,cAAR,cAA+B,+CAA/B,OACA,wBAAQuD,QAAS,WACXC,OAAOC,QAAQ,gDACjBhC,EAAWH,GACXU,EAAQW,KAAK,oCAHjB,oBAOI,cAAC,EAAD,CAAgBrB,OAAQA,WCVrBuD,MAZf,WACI,IAAOvD,EAAUmD,cAAVnD,OACP,OAAO,gCACH,cAAC,EAAD,IAEI,cAAC,EAAD,CAAMA,OAAQA,QCkBXwD,MAxBf,YAAqE,IAAtDC,EAAqD,EAArDA,aAAcC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,WAAYb,EAAc,EAAdA,MAAOC,EAAO,EAAPA,KAEzD,OAAO,uBAAM/B,SAAUyC,EAAhB,UACK,sBAAK7F,UAAU,yBAAf,UACI,uBAAO0D,QAAQ,QAAf,SACA,0BAAU1D,UAAU,cACpBsC,GAAG,QACHd,KAAK,QACLoC,SAAUkC,EACVhC,MAAOoB,MAGP,uBAAOxB,QAAQ,SACf,0BAAU1D,UAAU,cACpBsC,GAAG,OACHd,KAAK,OACLoC,SAAUmC,EACVjC,MAAOqB,OAEX,wBAAQxB,KAAK,SAAb,kBACA,cAAC,IAAD,CAAMvD,GAAG,KAAT,SAAc,wBAAQuD,KAAK,SAAb,0BCYfqC,MA5Bf,WACI,IAAMlD,EAAUC,cAChB,EAAwBC,mBAAS,IAAjC,mBAAOrC,EAAP,KAAa0E,EAAb,KACOjD,EAAUmD,cAAVnD,OACP,EAA0BY,mBAAS,IAAnC,mBAAOkC,EAAP,KAAce,EAAd,KACA,EAAwBjD,mBAAS,IAAjC,mBAAOmC,EAAP,KAAae,EAAb,KAcE,OAJFtB,qBAAU,WACN,IAAKzC,EAASC,GAAQoB,MAAK,SAACgC,GAAD,OAAYH,EAAQG,MAC7C,MAAO9D,GAAQ,GAAc,eAAVA,EAAwB,MAAMA,KAClD,CAACU,IAEF,gCACI,cAAC,EAAD,IACA,gCAAK,cAAC,IAAD,CAAMhC,GAAG,iCAAT,kBAAL,MAA6D,cAAC,IAAD,CAAMA,GAAE,+CAA0CO,EAAK2B,IAAvD,SAA8D3B,EAAKa,OAAhI,MAA+I,4CAC/I,cAAC,EAAD,CAAMuE,WAhBK,SAAC1C,GAAD,OAAW6C,EAAQ7C,EAAMQ,OAAOC,QAgBbgC,YAjBlB,SAACzC,GAAD,OAAW4C,EAAS5C,EAAMQ,OAAOC,QAiBW+B,aAf3C,SAAAxC,GACjBA,EAAMC,iBV4JP,SAAP,+BUzJQ6C,CAAW/D,EADE,CAAC,MAAS8C,EAAO,KAAQC,EAAM,OAAU/C,IAEtDU,EAAQW,KAAK,yCC8CN2C,MA5Df,WACE,IAAMtD,EAAUC,cACTX,EAAUmD,cAAVnD,OACP,EAAwBY,mBAAS,CAAC,GAAM,GAAI,KAAQ,GAAI,YAAe,GAAI,MAAS,KAApF,mBAAOrC,EAAP,KAAa0E,EAAb,KACAT,qBAAU,WACRzC,EAASC,GACRoB,KAAK6B,KACL,CAACjD,IAEJ,MAAwBY,mBAAS,IAAjC,mBAAOxB,EAAP,KAAayB,EAAb,KACA,EAAwBD,mBAAS,IAAjC,mBAAOE,EAAP,KAAaC,EAAb,KAsBE,OApBFyB,qBAAU,WACR3B,EAAQtC,EAAKa,QACZ,CAACb,IAEJiE,qBAAU,WACPzB,EAAQxC,EAAKyD,eACb,CAACzD,IAcK,gCACP,cAAC,EAAD,IACA,gCAAK,cAAC,IAAD,CAAMP,GAAG,iCAAT,kBAAL,MAA6D,eAAC,IAAD,CAAMA,GAAG,KAAT,cAAe,4BAAIO,EAAKa,UAAgB,6CACrG,uBAAM4B,SAXa,SAAAC,GACnBA,EAAMC,iBACN7B,QAAQ4E,IAAI,KXwFT,SAAP,6BWtFIC,CADa,CAAC,KAAO9E,EAAM,YAAc0B,EAAM,GAAKd,IAEpDU,EAAQyD,UAMR,UACA,sBAAKvG,UAAU,yBAAf,UACgB,uBAAO0D,QAAQ,OAAf,SACA,uBAAO1D,UAAU,cACjB2D,KAAK,OACLrB,GAAG,OACHd,KAAK,OACLoC,SApBC,SAACP,GAAD,OAAWJ,EAAQI,EAAMQ,OAAOC,QAqBjCA,MAAOtC,MAGP,uBAAOkC,QAAQ,SACf,0BAAU1D,UAAU,cACpBsC,GAAG,OACHd,KAAK,OACLoC,SA3BC,SAACP,GAAD,OAAWF,EAAQE,EAAMQ,OAAOC,QA4BjCA,MAAOZ,OAEX,wBAAQS,KAAK,SAAb,oBACA,cAAC,IAAD,CAAMvD,GAAG,iCAAT,SAA0C,wBAAQuD,KAAK,SAAb,6BCxB3C6C,MA7Bf,WACI,IAAOpE,EAAUmD,cAAVnD,OACDU,EAAUC,cAChB,EAAwBC,mBAAS,IAAjC,mBAAOR,EAAP,KAAaiE,EAAb,KACO/D,EAAU6C,cAAV7C,OACP,EAA0BM,mBAAS,IAAnC,mBAAOkC,EAAP,KAAce,EAAd,KACA,EAAwBjD,mBAAS,IAAjC,mBAAOmC,EAAP,KAAae,EAAb,KAoBA,OAXAtB,qBAAU,WACN,KZ4KD,SAAP,qCY5Ka8B,CAAShE,GAAQc,MAAK,SAACgC,GAAD,OAAYiB,EAAQjB,MAC7C,MAAO9D,GAAQ,GAAc,eAAVA,EAAwB,MAAMA,KAClD,CAACgB,IACJkC,qBAAU,WACNqB,EAASzD,EAAK0C,SACf,CAAC1C,IACJoC,qBAAU,WACRsB,EAAQ1D,EAAK2C,QACd,CAAC3C,IAEG,cAAC,EAAD,CAAMuD,WAlBM,SAAC1C,GAAD,OAAW6C,EAAQ7C,EAAMQ,OAAOC,QAkBdgC,YAnBjB,SAACzC,GAAD,OAAW4C,EAAS5C,EAAMQ,OAAOC,QAmBU+B,aAjB1C,SAAAxC,GACjBA,EAAMC,iBZgMP,SAAP,6BY9LQqD,CADa,CAAC,MAASzB,EAAO,KAAQC,EAAM,GAAMzC,EAAQ,OAAUD,OAAOL,KAE3EU,EAAQW,KAAK,QAa0EyB,MAAOA,EAAOC,KAAMA,KCyCpGyB,MApEf,WAEI,IAAOxE,EAAUmD,cAAVnD,OACP,EAAgCY,mBAAS,IAAzC,mBAAOgC,EAAP,KAAiBM,EAAjB,KACA,EAAwBtC,qBAAxB,mBAAOxB,EAAP,KAAayB,EAAb,KACA,EAAsCD,qBAAtC,mBAAOoB,EAAP,KAAoByC,EAApB,KACA,EAA0B7D,mBAAS,GAAnC,mBAAO8D,EAAP,KAAcC,EAAd,KACA,EAAwB/D,mBAAS,SAAjC,mBAAOgE,EAAP,KAAaC,EAAb,KACMnE,EAAUC,cAmChB,OAhBA6B,qBAAU,WACN,IAAKzC,EAASC,GACToB,MAAK,SAACgC,GAAD,OAAYvC,EAAQuC,EAAOhE,SAEnC,MAAOE,GAAQ,GAAc,eAAVA,EAAwB,MAAMA,KAClD,CAACU,IACJwC,qBAAU,WACPzC,EAASC,GACLoB,MAAK,SAACgC,GAAD,OAAYF,EAAYE,EAAO5E,YACxC,CAACwB,IACJwC,qBAAU,WACR,IAAKzC,EAASC,GACToB,MAAK,SAACgC,GAAD,OAAYqB,EAAerB,EAAOpB,gBAE1C,MAAO1C,GAAQ,GAAc,eAAVA,EAAwB,MAAMA,KAClD,CAACU,IACD4C,EAASb,OAAS,EACnB,gCACI,cAAC,EAAD,IACA,6BAAK3C,IACL,4BAAI4C,IACJ,qDAQJ,gCACI,cAAC,EAAD,IACA,6BAAK5C,IACL,4BAAI4C,IACJ,sCAAS0C,EAAQ,EAAjB,OAAwB9B,EAASb,UACjC,4BAAIa,EAAS8B,GAAOE,KACpB,wBAAQ3C,QAAS,kBAAM4C,EAAQ,SAA/B,kBAlDS,SAATD,GAAmBF,EAAQ9B,EAASb,OAAS,EACtC,wBAAQE,QAAS,WACxB4C,EAAQ,SACRF,EAASD,EAAQ,IAFV,kBAIS,SAATE,EACA,wBAAQ3C,QAAS,WAChBC,OAAOC,QAAP,uEACAD,OAAOE,SAASC,SACZ3B,EAAQW,KAAK,mCAHlB,uBADJ,MCgCAyD,MAvCf,WACE,OACE,qBAAKlH,UAAU,aAAf,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,iCAAlB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,cAAC,IAAD,CAAOA,KAAK,2CAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,yDAAZ,SACE,cAAC,EAAD,MAIF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,+CAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,oDAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,qDAAZ,SACE,cAAC,EAAD,MAEF,eAAC,IAAD,CAAOA,KAAK,kEAAZ,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAGF,cAAC,IAAD,UACE,cAAC,EAAD,YC3CVgH,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.01e8da7d.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"jumbotron bg-dark\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Flashcard-o-matic</h1>\n        <p className=\"lead\">Discover The Flashcard Difference.</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;","import React from \"react\";\nimport Header from \"./Header\";\nimport {Route, Switch, Link} from \"react-router-dom\";\n\nfunction Layout() {\n  return (\n    <div>\n      \n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/Project-Qualifed-Flashcards-1\">\n              <Header />\n              <Link to=\"/Project-Qualifed-Flashcards-1/decks/new\"><button className=\"bg-dark lead text-white\">New Deck</button></Link>\n            </Route>\n            <Route path=\"/Project-Qualifed-Flashcards-1\">\n              <Header />\n            </Route>\n            \n            \n\n          </Switch>\n        </div>\n    </div>\n  );\n}\n\nexport default Layout;\n\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n      <Link to=\"/Project-Qualifed-Flashcards-1\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default NotFound;\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nconst API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:5000\"; //Might need this, in case tests fail\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param deck\n *  the deck instance\n * @returns {*}\n *  a copy of the deck instance with the `cards` property removed.\n */\nfunction stripCards(deck) {\n  const { cards, ...deckWithoutCards } = deck;\n  return deckWithoutCards;\n}\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @param onCancel\n *  default value returned if the fetch is cancelled.\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\n\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.status < 200 || response.status > 399) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    if (response.status === 204) {\n      return null;\n    }\n\n    return await response.json();\n\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n/**\n * Retrieves all existing decks.\n * @returns {Promise<[deck]>}\n *  a promise that resolves to a possibly empty array of decks saved in the database.\n */\nexport async function listDecks(signal) {\n  const url = `${API_BASE_URL}/Project-Qualifed-Flashcards-1/decks?_embed=cards`;\n  return await fetchJson(url, { signal }, []);\n}\n\n/**\n * Saves deck to the database (public/data/db.json).\n * There is no validation done on the deck object, any object will be saved.\n * @param deck\n *  the deck to save, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<deck>}\n *  a promise that resolves the saved deck, which will now have an `id` property.\n */\nexport async function createDeck(deck, signal) {\n  const url = `${API_BASE_URL}/Project-Qualifed-Flashcards-1/decks`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(stripCards(deck)),\n    signal,\n  };\n  return await fetchJson(url, options, {});\n}\n\n/**\n * Retrieves the deck with the specified `deckId`\n * @param deckId\n *  the `id` property matching the desired deck.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<any>}\n *  a promise that resolves to the saved deck.\n */\nexport async function readDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/Project-Qualifed-Flashcards-1/decks/${deckId}?_embed=cards`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedDeck\n *  the deck to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated deck.\n */\nexport async function updateDeck(updatedDeck, signal) {\n  const url = `${API_BASE_URL}/Project-Qualifed-Flashcards-1/decks/${updatedDeck.id}?_embed=cards`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(stripCards(updatedDeck)),\n    signal,\n  };\n  return await fetchJson(url, options, updatedDeck);\n}\n\n/**\n * Deletes the deck with the specified `deckId`.\n * @param deckId\n *  the id of the deck to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/Project-Qualifed-Flashcards-1/decks/${deckId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves all cards associated with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to a possible empty array of cards.\n */\nexport async function listCards(deckId, signal) {\n  const url = `${API_BASE_URL}/Project-Qualifed-Flashcards-1/cards?deckId=${deckId}`;\n  return await fetchJson(url, { signal }, []);\n}\n\n/**\n * Creates a new card associated with the specified `deckId`.\n * There is no validation that there is an existing deck with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param card\n *  the card to create, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the new card, which will have an `id` property.\n */\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  const url = `${API_BASE_URL}/Project-Qualifed-Flashcards-1/cards`;\n  card.deckId = Number(deckId);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(card),\n    signal,\n  };\n  return await fetchJson(url, options, card);\n}\n\n/**\n * Retrieves the card with the specified `cardId`\n * @param cardId\n *  the id of the target\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the saved card.\n */\nexport async function readCard(cardId, signal) {\n  const url = `${API_BASE_URL}/Project-Qualifed-Flashcards-1/cards/${cardId}`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedCard\n *  the card to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated card.\n */\nexport async function updateCard(updatedCard, signal) {\n  const url = `${API_BASE_URL}/Project-Qualifed-Flashcards-1/cards/${updatedCard.id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(updatedCard),\n  };\n  return await fetchJson(url, options, updatedCard);\n}\n\n/**\n * Deletes the card with the specified `cardId`.\n * @param cardId\n *  the id of the card to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteCard(cardId, signal) {\n  const url = `${API_BASE_URL}/Project-Qualifed-Flashcards-1/cards/${cardId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\nexport default API_BASE_URL;\n","import React, {useState} from \"react\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport Header from \"../Layout\";\r\nimport { createDeck } from \"../utils/api\";\r\n\r\nfunction NewDeck() {\r\n  const history = useHistory();\r\n  const [name, setName] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const handleName = (event) => setName(event.target.value)\r\n  const handleDesc = (event) => setDesc(event.target.value)\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n        \r\n    const deck = {\"name\": name, \"description\": desc};\r\n    createDeck(deck)\r\n    .then(history.push('/Project-Qualifed-Flashcards-1'));\r\n  }\r\n  return <div>\r\n    <Header />\r\n    <nav><Link to=\"/Project-Qualifed-Flashcards-1\">Home</Link> / <p>Create Deck</p></nav>\r\n    <form onSubmit={handleSubmit}>\r\n    <div className=\"d-flex flex-column m-3\">\r\n                    <label htmlFor=\"name\">\r\n                    <input className=\"d-flex w-75\"\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    onChange={handleName}\r\n                    value={name}/>\r\n                    </label>\r\n        \r\n                    <label htmlFor=\"desc\"></label>\r\n                    <textarea className=\"d-flex w-75\" \r\n                    id=\"desc\"\r\n                    name=\"desc\"\r\n                    onChange={handleDesc}\r\n                    value={desc}/>\r\n                </div>\r\n                <button type=\"submit\">Submit</button>\r\n                <Link to=\"/Project-Qualifed-Flashcards-1\"><button type=\"button\">cancel</button></Link>\r\n    </form>\r\n\r\n  </div>\r\n};\r\nexport default NewDeck;","import {Link} from \"react-router-dom\";\r\nimport {deleteDeck} from \"../utils/api/index\"\r\n\r\n\r\n\r\nfunction Deck({decks}) {\r\n\r\n        return decks.map((item) => {\r\n            return <li key={item.id}>\r\n                <div className=\"border p-3 m-3\">\r\n                <div className=\"w-100 p-4 d-flex flex-row justify-content-between\">\r\n                <h3>{item.name}</h3>\r\n                <p>{item.cards.length} cards</p>\r\n                </div>\r\n                 \r\n                 <p>{item.description}</p>\r\n                 <div name=\"buttons\" className=\"d-flex-row\">\r\n                    <Link to={`/Project-Qualifed-Flashcards-1/decks/${item.id}`}><button>view</button></Link>\r\n                    <Link to={`/Project-Qualifed-Flashcards-1/decks/${item.id}/study`}><button>study</button></Link>\r\n                    <button onClick={() => {\r\n                        if (window.confirm(\"Are you sure you want to delete this deck?\")) {\r\n                            deleteDeck(item.id)\r\n                            .then(window.location.reload())\r\n                            }}}>Delete \r\n                    </button>\r\n                 </div>\r\n                 </div>\r\n                </li>\r\n        })\r\n        \r\n      }\r\n\r\nexport default Deck;\r\n    \r\n","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { listDecks } from \"../utils/api\";\r\nimport Deck from \"./Deck\";\r\n\r\n function Decks() {\r\n    const [decks, setDecks] = useState([])\r\n    const deckList = \"\";\r\n\r\n    useEffect(() => {\r\n        listDecks()\r\n        .then(setDecks);\r\n      }, [])\r\n\r\n      \r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <ul>\r\n                <Deck decks={decks} deckList={deckList}/>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Decks;","import {Link, useRouteMatch} from \"react-router-dom\"\r\n\r\nfunction CardList({cardList}) {\r\n    const {url} = useRouteMatch();\r\n    return cardList.map((item) => {\r\n        return  <li className=\"border\" key={item.id}>\r\n            <div className=\"row p-3\">\r\n                <p className=\"col\">{item.front}</p>\r\n                <p className=\"col\">{item.back}</p>\r\n            </div>\r\n            <Link to={`${url}/cards/${item.id}/edit`}> <button>Edit</button> </Link>\r\n            <button>Delete</button>\r\n        </li>\r\n    })\r\n}\r\n\r\nexport default CardList;\r\n\r\n","import {useState, useEffect} from \"react\";\r\nimport { readDeck } from \"../utils/api\";\r\nimport { Link, useParams} from \"react-router-dom\";\r\nimport CardList from \"./CardList\";\r\n\r\n\r\nfunction FilterCardList() {\r\n    const [deck, setDeck] = useState({});\r\n    const [cardList, setCardList] = useState([])\r\n    const {deckId} = useParams();\r\n    \r\n    useEffect(() => {\r\n        try {readDeck(deckId)\r\n            .then((result) => setDeck(result))\r\n            \r\n        } catch (error) {if (error !== \"AbortError\") throw error}\r\n      }, [deckId])\r\n      useEffect(() => {\r\n        try {readDeck(deckId)\r\n            .then((result) => setCardList(result.cards))\r\n            \r\n        } catch (error) {if (error !== \"AbortError\") throw error}\r\n      }, [deckId])\r\n\r\n    return (\r\n        <div>\r\n            <nav><Link to=\"/\">Home</Link> / <p>{deck.name}</p> </nav>\r\n            <ul><CardList cardList={cardList}/></ul>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default FilterCardList;","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { readDeck } from \"../utils/api\";\r\n\r\n function DeckList({deckId}) {\r\n    const [deck, setDeck] = useState([])\r\n    useEffect(() => {\r\n       readDeck(deckId)\r\n       .then(setDeck)\r\n      }, [deckId])\r\n\r\n      return <div>\r\n        <h2>{deck.name}</h2>\r\n        <p>{deck.description}</p>\r\n      </div>\r\n      \r\n\r\n}\r\nexport default DeckList;","import FilterCardList from \"./FilterCardList\"\r\nimport DeckList from \"../Deck/DeckList\";\r\nimport { Link, useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport {deleteDeck} from \"../utils/api/index\"\r\n\r\n\r\nfunction Card({deckId}) {\r\n    const {url} = useRouteMatch();\r\n    const history = useHistory();\r\n\r\n      //make this cycle through all the cards and filter them into an array only containing cards within the proper Id\r\n      return (\r\n        <div className=\"flex-column d-flex justify-content-center\">\r\n        <DeckList deckId={deckId}/>\r\n        \r\n        <div className=\"justify-content-center\">\r\n        <Link to={`${url}/edit`}> <button>edit</button> </Link>\r\n        <button>study</button>\r\n        <Link to={`${url}/cards/new`}> <button>Add cards</button> </Link>\r\n        <button onClick={() => {\r\n          if (window.confirm(\"Are you sure you want to delete this deck?\")) {\r\n            deleteDeck(deckId);\r\n            history.push('/Project-Qualifed-Flashcards-1')\r\n          }}}>delete\r\n        </button>\r\n\r\n            <FilterCardList deckId={deckId}/>\r\n\r\n    </div>\r\n    </div>\r\n      )\r\n            \r\n}\r\n\r\nexport default Card;","import React, {useParams} from \"react-router-dom\";\r\nimport Card from \"../cards/Card\";\r\nimport Layout from \"./index\";\r\n\r\nfunction View() {\r\n    const {deckId} = useParams();\r\n    return <div>\r\n        <Layout />\r\n        \r\n            <Card deckId={deckId}/>\r\n        \r\n        \r\n    </div>\r\n\r\n}\r\n\r\nexport default View;","import {Link} from \"react-router-dom\";\r\n\r\n\r\nfunction Form({handleSubmit, handleFront, handleBack, front, back}) {\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n                <div className=\"d-flex flex-column m-3\">\r\n                    <label htmlFor=\"front\">\r\n                    <textarea className=\"d-flex w-75\"\r\n                    id=\"front\"\r\n                    name=\"front\"\r\n                    onChange={handleFront}\r\n                    value={front}/>\r\n                    </label>\r\n        \r\n                    <label htmlFor=\"back\"></label>\r\n                    <textarea className=\"d-flex w-75\" \r\n                    id=\"back\"\r\n                    name=\"back\"\r\n                    onChange={handleBack}\r\n                    value={back}/>\r\n                </div>\r\n                <button type=\"submit\">Save</button>\r\n                <Link to='./'><button type=\"button\">cancel</button></Link>\r\n            </form>\r\n}\r\n\r\nexport default Form;","import {readDeck} from \"../utils/api/index\"\r\nimport { useState, useEffect } from \"react\";\r\nimport {useParams, Link, useHistory} from \"react-router-dom\"\r\nimport Header from \"../Layout/Header\";\r\nimport {createCard} from \"../utils/api/index\";\r\nimport Form from \"./Form\";\r\n\r\nfunction AddCards() {\r\n    const history = useHistory();\r\n    const [deck, setDeck] = useState([]);\r\n    const {deckId} = useParams();\r\n    const [front, setFront] = useState(\"\");\r\n    const [back, setBack] = useState(\"\");\r\n    const handleFront = (event) => setFront(event.target.value)\r\n    const handleBack = (event) => setBack(event.target.value)\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        \r\n        const card = {\"front\": front, \"back\": back, \"deckId\": deckId};\r\n        createCard(deckId, card);\r\n        history.push('/Project-Qualifed-Flashcards-1')\r\n    }\r\n    useEffect(() => {\r\n        try {readDeck(deckId).then((result) => setDeck(result))\r\n        } catch (error) {if (error !== \"AbortError\") throw error}\r\n      }, [deckId])\r\n      return (\r\n        <div>\r\n            <Header />\r\n            <nav><Link to=\"/Project-Qualifed-Flashcards-1\">Home</Link> / <Link to={`/Project-Qualifed-Flashcards-1/decks/${deck.id}`}>{deck.name}</Link> / <p>Add Card</p></nav>\r\n            <Form handleBack={handleBack} handleFront={handleFront} handleSubmit={handleSubmit}/>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default AddCards;\r\n\r\n    \r\n    \r\n    ","\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {Link, useParams, useHistory} from \"react-router-dom\";\r\nimport Header from \"../Layout\";\r\nimport { updateDeck, readDeck } from \"../utils/api\";\r\n\r\nfunction EditDeck () {\r\n  const history = useHistory();\r\n  const {deckId} = useParams();\r\n  const [deck, setDeck] = useState({\"id\": '', \"name\": '', \"description\": '', \"cards\": '',});\r\n  useEffect(() => {\r\n    readDeck(deckId)\r\n    .then(setDeck);\r\n  }, [deckId])\r\n  \r\n  const [name, setName] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setName(deck.name)\r\n  }, [deck])\r\n\r\n  useEffect(() => {\r\n    (setDesc(deck.description))\r\n  }, [deck])\r\n\r\n\r\n  \r\n  const handleName = (event) => setName(event.target.value)\r\n  const handleDesc = (event) => setDesc(event.target.value)\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    console.log(\"1\")\r\n    const deck = {\"name\":name, \"description\":desc, \"id\":deckId};\r\n    updateDeck(deck);\r\n    history.goBack()\r\n  }\r\n\r\n    return <div>\r\n    <Header />\r\n    <nav><Link to=\"/Project-Qualifed-Flashcards-1\">Home</Link> / <Link to=\"./\"> <p>{deck.name}</p></Link><p>Edit Deck</p></nav>\r\n    <form onSubmit={handleSubmit}>\r\n    <div className=\"d-flex flex-column m-3\">\r\n                    <label htmlFor=\"name\">\r\n                    <input className=\"d-flex w-75\"\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    onChange={handleName}\r\n                    value={name}/>\r\n                    </label>\r\n        \r\n                    <label htmlFor=\"desc\"></label>\r\n                    <textarea className=\"d-flex w-75\" \r\n                    id=\"desc\"\r\n                    name=\"desc\"\r\n                    onChange={handleDesc}\r\n                    value={desc}/>\r\n                </div>\r\n                <button type=\"submit\">Submit</button>\r\n                <Link to=\"/Project-Qualifed-Flashcards-1\"><button type=\"button\">cancel</button></Link>\r\n    </form>\r\n\r\n  </div>\r\n}\r\n\r\nexport default EditDeck;\r\n","import {updateCard, readCard} from \"../utils/api/index\"\r\nimport { useState, useEffect } from \"react\";\r\nimport {useParams, useHistory} from \"react-router-dom\"\r\nimport Form from \"./Form\";\r\n\r\n\r\n\r\nfunction EditCard() {\r\n    const {deckId} = useParams();\r\n    const history = useHistory();\r\n    const [card, setCard] = useState([]);\r\n    const {cardId} = useParams();\r\n    const [front, setFront] = useState(\"\");\r\n    const [back, setBack] = useState(\"\");\r\n    const handleFront = (event) => setFront(event.target.value)\r\n    const handleBack = (event) => setBack(event.target.value)\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        const card = {\"front\": front, \"back\": back, \"id\": cardId, \"deckId\": Number(deckId)};\r\n        updateCard(card);\r\n        history.push('../')\r\n    }\r\n    useEffect(() => {\r\n        try {readCard(cardId).then((result) => setCard(result))\r\n        } catch (error) {if (error !== \"AbortError\") throw error}\r\n      }, [cardId])\r\n      useEffect(() => {\r\n          setFront(card.front)\r\n      }, [card])\r\n      useEffect(() => {\r\n        setBack(card.back)\r\n    }, [card])\r\n\r\n    return <Form handleBack={handleBack} handleFront={handleFront} handleSubmit={handleSubmit} front={front} back={back}/>\r\n}\r\n\r\nexport default EditCard;\r\n","import { useEffect, useState } from \"react\"\r\nimport { readDeck } from \"../utils/api\"\r\nimport { useParams } from \"react-router\";\r\nimport Header from \"../Layout/Header\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Study() {\r\n\r\n    const {deckId} = useParams();\r\n    const [cardList, setCardList] = useState([]);\r\n    const [name, setName] = useState();\r\n    const [description, setDescription] = useState()\r\n    const [index, setIndex] = useState(0);\r\n    const [side, setSide] = useState(\"front\");\r\n    const history = useHistory();\r\n\r\n    const nextButton = () => {\r\n             \r\n        if (side === \"back\" && index < cardList.length - 1) {\r\n            return <button onClick={() => {\r\n            setSide(\"front\");\r\n            setIndex(index + 1)\r\n            }}>Next</button>\r\n        } else if (side === \"back\") {\r\n            return <button onClick={() => {\r\n                if (window.confirm(`Restart cards?\\n\\nClicking \"cancel\" will return you to the homepage`)) {\r\n                    window.location.reload();\r\n                } else {history.push(\"/Project-Qualifed-Flashcards-1\")}\r\n            }}>Next</button>\r\n        }\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        try {readDeck(deckId)\r\n            .then((result) => setName(result.name))\r\n            \r\n        } catch (error) {if (error !== \"AbortError\") throw error}\r\n      }, [deckId])\r\n      useEffect(() => {\r\n         readDeck(deckId)\r\n            .then((result) => setCardList(result.cards))\r\n      }, [deckId])\r\n      useEffect(() => {\r\n        try {readDeck(deckId)\r\n            .then((result) => setDescription(result.description))\r\n            \r\n        } catch (error) {if (error !== \"AbortError\") throw error}\r\n      }, [deckId])\r\n    if ( cardList.length < 2 ) return (\r\n        <div>\r\n            <Header />\r\n            <h1>{name}</h1>\r\n            <p>{description}</p>\r\n            <h3>Not Enough Cards</h3>\r\n            \r\n\r\n        </div>\r\n\r\n    )\r\n    \r\n    return(\r\n        <div>\r\n            <Header />\r\n            <h1>{name}</h1>\r\n            <p>{description}</p>\r\n            <p>card {index + 1} of {cardList.length}</p>\r\n            <p>{cardList[index][side]}</p>\r\n            <button onClick={() => setSide(\"back\")}>Flip</button>\r\n            {nextButton()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Study;","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\nimport NotFound from \"./Layout/NotFound\";\nimport NewDeck from \"./Layout/NewDeck\";\nimport Decks from \"./Deck/Decks\";\nimport View from \"./Layout/View\";\nimport AddCards from \"./cards/AddCards\"\nimport EditDeck from \"./Deck/EditDeck\";\nimport EditCard from \"./cards/EditCard\";\nimport Study from \"./Study/Study\"\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route exact path=\"/Project-Qualifed-Flashcards-1\">\n          <Layout />\n          <Decks />\n        </Route>     \n        <Route path=\"/Project-Qualifed-Flashcards-1/decks/new\">\n          <NewDeck />\n        </Route>\n        \n        <Route path=\"/Project-Qualifed-Flashcards-1/decks/:deckId/cards/new\">\n          <AddCards />\n        </Route>\n        \n        \n        <Route exact path=\"/Project-Qualifed-Flashcards-1/decks/:deckId\">\n          <View />\n        </Route>\n        <Route path=\"/Project-Qualifed-Flashcards-1/decks/:deckId/edit\">\n          <EditDeck />\n        </Route>\n        <Route path=\"/Project-Qualifed-Flashcards-1/decks/:deckId/study\">\n          <Study />\n        </Route>\n        <Route path=\"/Project-Qualifed-Flashcards-1/decks/:deckId/cards/:cardId/edit\">\n          <Layout />\n          <EditCard />\n        </Route>\n        \n        <Route>\n          <NotFound />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}